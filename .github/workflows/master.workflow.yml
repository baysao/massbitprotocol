name: CI for Master Branch

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Running compilation check
  # check:
  #   name: Check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: check
  # Running format check
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  # Running test
  test:
    name: Test
    env:
      PROJECT_NAME: rust_ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Install missing dependencies
        run: |
          sudo apt install -y cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev libpq-dev libudev-dev zlib1g-dev llvm make
          rustup toolchain install nightly-2021-05-20
          rustup target add wasm32-unknown-unknown --toolchain nightly-2021-05-20
      - uses: Swatinem/rust-cache@v1
      - name: Run test without coverage
        run: |
          cargo test

  # Running cargo build
  build:
    needs: [test]
    name: Build
    env:
      ARTIFACT: massbitprotocol-artifact
      CHAIN_READER: chain-reader
      INDEXER: indexer-manager-main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Install missing dependencies
        run: |
          sudo apt install -y cmake pkg-config libssl-dev git gcc build-essential clang libclang-dev libpq-dev libudev-dev zlib1g-dev llvm make
          rustup toolchain install nightly-2021-05-20
          rustup target add wasm32-unknown-unknown --toolchain nightly-2021-05-20
      - name: Release Build
        run: cargo build --release
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT }}
          path: target/release/${{ env.CHAIN_READER }}
          path: target/release/${{ env.INDEXER }}

  # Building docker image and upload to docker hub
  docker:
    needs: [build]
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2

      - name: Build and push chain-reader docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./deployment/chain-reader
          push: true
          tags: test
          labels: chain-reader

      - name: Build and push indexer docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./deployment/indexer
          push: true
          tags: test
          labels: indexer
